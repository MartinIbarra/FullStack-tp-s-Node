/*
Author: Maxi Dev
Email: maxi.canellas@gmail.com
Twitter: twitter.com/maxidev_
*/

var request = require("request");

//options
config = {
   key: null,
   region: null
};

exports.setRegion = function(region){

   return config.region = region;
}

exports.setKey = function(key){
   return config.key = key;
}


 getSummonerId = function(sum, callback) {

   var summoners = {};
   var summoner = sum.replace(/\s+/g, '');

   request("https://na.api.pvp.net/api/lol/"+config.region+"/v1.4/summoner/by-name/"+summoner+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         summoners[summoner] = JSON.parse(body);
         callback(summoners[summoner][summoner].id);
   });
 }


exports.getSummonerProfile = function(sum, callback){

   var summoners = {};
   var summoner = sum.replace(/\s+/g, '');

   request("https://na.api.pvp.net/api/lol/"+config.region+"/v1.4/summoner/by-name/"+summoner+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         callback(JSON.parse(body));
   });
}


//SummonnerStats =====================================

exports.getSummonerStatsGeneral = function(sum, callback){

   getSummonerId(sum, function(sId) {

      request("https://na.api.pvp.net/api/lol/"+config.region+"/v1.3/stats/by-summoner/"+sId+"/summary"+"?api_key="+config.key, function(error, response, body) {
            if(error){
               throw error;
            }
            callback(JSON.parse(body));
       });

   });
}


exports.getSummonerStatsRanked = function(sum, callback){

   getSummonerId(sum, function(sId) {

      request("https://na.api.pvp.net/api/lol/"+config.region+"/v1.3/stats/by-summoner/"+sId+"/ranked"+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
            callback(JSON.parse(body));
       });
   });
}

//SummonerStats END =====================================

exports.getSummonerMatchHistory = function(sum, callback) {

   getSummonerId(sum, function(sId) {

      request("https://na.api.pvp.net/api/lol/"+config.region+"/v2.2/matchhistory/"+sId+"?api_key="+config.key, function(error, response, body) {
            if(error){
               throw error;
            }
            callback(JSON.parse(body));
       });
    });
}

exports.getSummonerRecentGames = function(sum, callback) {

   getSummonerId(sum, function(sId) {

      request("https://na.api.pvp.net/api/lol/"+config.region+"/v1.3/game/by-summoner/"+sId+"/recent/"+"?api_key="+config.key, function(error, response, body) {
            if(error){
               throw error;
            }
            callback(JSON.parse(body));
       });
    });
}



// LOL STATIC data ======================================

exports.getChampions = function(callback){

   request("https://na.api.pvp.net/api/lol/static-data/"+config.region+"/v1.2/champion"+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         callback(JSON.parse(body));
    });

}

exports.getItems = function(callback) {

   request("https://na.api.pvp.net/api/lol/static-data/"+config.region+"/v1.2/item"+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         callback(JSON.parse(body));
    });
}

exports.getMasteries = function(callback) {

   request("https://na.api.pvp.net/api/lol/static-data/"+config.region+"/v1.2/mastery"+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         callback(JSON.parse(body));
    });

}


exports.getRunes = function(callback) {

   request("https://na.api.pvp.net/api/lol/static-data/"+config.region+"/v1.2/rune"+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         callback(JSON.parse(body));
    });

}

exports.getSummonerSpells = function(callback) {

   request("https://na.api.pvp.net/api/lol/static-data/"+config.region+"/v1.2/summoner-spell"+"?api_key="+config.key, function(error, response, body) {
         if(error){
            throw error;
         }
         callback(JSON.parse(body));
    });

}

// STATIC DATA END ===============================


